
void bnStd!TYPEFuncCall(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEPositive(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPENegative(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEChilda(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPENot(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEPlus(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEMinus(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEMultiply(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEDivide(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEModulo(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEBitAnd(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEBitOr(struct bnInterpreter* bone, struct bnFrame* frame);

// void bnStd!TYPELogicAnd(struct bnInterpreter* bone, struct bnFrame* frame);

// void bnStd!TYPELogicOr(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEExcOr(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPELShift(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPERShift(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEGT(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEGE(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPELT(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPELE(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPEEqual(struct bnInterpreter* bone, struct bnFrame* frame);

void bnStd!TYPENotEqual(struct bnInterpreter* bone, struct bnFrame* frame);